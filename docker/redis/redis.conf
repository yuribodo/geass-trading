# Redis configuration for Geass Trading Platform - Production
# Optimized for caching, session storage, and real-time trading data

#==============================================================================
# NETWORK AND BASIC SETTINGS
#==============================================================================

# Accept connections from any IP (Docker container)
bind 0.0.0.0

# Listen on standard Redis port
port 6379

# Connection settings
tcp-backlog 511
timeout 300
tcp-keepalive 300

#==============================================================================
# GENERAL SETTINGS
#==============================================================================

# Daemon mode (run in background)
daemonize no

# Logging
loglevel notice
logfile ""
syslog-enabled no

# Database settings
databases 16

#==============================================================================
# MEMORY MANAGEMENT
#==============================================================================

# Memory optimization for trading data
maxmemory 512mb
maxmemory-policy allkeys-lru

# Memory sampling for LRU
maxmemory-samples 5

#==============================================================================
# PERSISTENCE SETTINGS (Production)
#==============================================================================

# RDB Snapshots - for point-in-time recovery
save 900 1
save 300 10
save 60 10000

# RDB file settings
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename geass-trading.rdb
dir /data

# AOF (Append Only File) - for durability
appendonly yes
appendfilename "geass-trading.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

#==============================================================================
# PERFORMANCE TUNING
#==============================================================================

# Lazy deletion for better performance
lazyfree-lazy-eviction yes
lazyfree-lazy-expire yes
lazyfree-lazy-server-del yes

# Hash table rehashing
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization
set-max-intset-entries 512

# Sorted set optimization  
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation
hll-sparse-max-bytes 3000

# Streams configuration
stream-node-max-bytes 4096
stream-node-max-entries 100

#==============================================================================
# SECURITY
#==============================================================================

# Authentication (to be set via environment variables)
# requirepass will be set via Docker environment if REDIS_PASSWORD is provided

# Disable dangerous commands in production
rename-command FLUSHDB ""
rename-command FLUSHALL ""
rename-command CONFIG "GEASS_CONFIG_d1e5f7a8b9c0"
rename-command DEBUG ""
rename-command SHUTDOWN "GEASS_SHUTDOWN_a1b2c3d4e5f6"

# Protected mode
protected-mode no

#==============================================================================
# SLOW LOG
#==============================================================================

# Log queries slower than 10ms
slowlog-log-slower-than 10000
slowlog-max-len 128

#==============================================================================
# LATENCY MONITOR
#==============================================================================

latency-monitor-threshold 100

#==============================================================================
# EVENT NOTIFICATION (for real-time features)
#==============================================================================

# Enable keyspace notifications for expired events and lists
notify-keyspace-events "Ex"

#==============================================================================
# ADVANCED CONFIG
#==============================================================================

# Active rehashing
activerehashing yes

# Client output buffer limits
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Client query buffer
client-query-buffer-limit 1gb

# Protocol buffer
proto-max-bulk-len 512mb

# Frequency of background tasks
hz 10

# Dynamic HZ
dynamic-hz yes

# AOF rewrite buffer
aof-rewrite-incremental-fsync yes

# LRU algorithm improvement
lfu-log-factor 10
lfu-decay-time 1

#==============================================================================
# TRADING-SPECIFIC OPTIMIZATIONS
#==============================================================================

# Optimizations for high-frequency trading data
# These settings optimize for:
# - Price caching (frequent updates)
# - Session management (user sessions)
# - Real-time notifications (pub/sub)
# - Order book snapshots (large data structures)

# Enable faster background saving
rdb-save-incremental-fsync yes

# Optimize for memory efficiency with trading data
# Most trading data is numeric and can be compressed well
rdbcompression yes

# Enable jemalloc background thread for better memory management
jemalloc-bg-thread yes

#==============================================================================
# MONITORING AND STATS
#==============================================================================

# Enable detailed statistics
# This helps monitor cache hit rates and performance
# Important for trading applications where latency matters