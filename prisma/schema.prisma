
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(255)
  password  String   // password_hash
  firstName String?  @map("first_name") @db.VarChar(100)
  lastName  String?  @map("last_name") @db.VarChar(100)
  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz

  @@map("users")
}

// TimescaleDB hypertable for OHLCV data
model MarketData {
  time      DateTime @db.Timestamptz
  symbol    String   @db.VarChar(20)
  open      Decimal  @db.Decimal(20, 8)
  high      Decimal  @db.Decimal(20, 8)
  low       Decimal  @db.Decimal(20, 8)
  close     Decimal  @db.Decimal(20, 8)
  volume    Decimal  @db.Decimal(20, 8)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz

  @@id([time, symbol])
  @@index([symbol, time(sort: Desc)])
  @@map("market_data")
}

model PriceUpdate {
  id        String   @id @default(uuid()) @db.Uuid
  symbol    String   @db.VarChar(20)
  price     Decimal  @db.Decimal(20, 8)
  timestamp DateTime @default(now()) @db.Timestamptz

  @@map("price_updates")
}